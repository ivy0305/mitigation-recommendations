{
  "data": {
    "Zenbox android": {
      "tactics": [
        {
          "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques that allow the adversary to gain knowledge about the characteristics of the mobile device and potentially other networked systems. When adversaries gain access to a new system, they must orient themselves to what they now have control of and what benefits operating from that system give to their current objective or overall goals during the intrusion. The operating system may provide capabilities that aid in this post-compromise information-gathering phase.",
          "techniques": [
            {
              "description": "Adversaries may attempt to get a listing of network connections to or from the compromised device they are currently accessing or from remote systems by querying for information over the network. \nThis is typically accomplished by utilizing device APIs to collect information about nearby networks, such as Wi-Fi, Bluetooth, and cellular tower connections. On Android, this can be done by querying the respective APIs: \n\n\nWifiInfo for information about the current Wi-Fi connection, as well as nearby Wi-Fi networks. Querying the WiFiInfo API requires the application to hold the ACCESS_FINE_LOCATION permission. \n\n\nBluetoothAdapter for information about Bluetooth devices, which also requires the application to hold several permissions granted by the user at runtime. \n\n\nFor Android versions prior to Q, applications can use the TelephonyManager.getNeighboringCellInfo() method. For Q and later, applications can use the TelephonyManager.getAllCellInfo() method. Both methods require the application hold the ACCESS_FINE_LOCATION permission.\n\n",
              "signatures": [
                {
                  "severity": "INFO",
                  "description": "Checks an internet connection is available"
                }
              ],
              "link": "https://attack.mitre.org/techniques/T1421/",
              "id": "T1421",
              "name": "System Network Connections Discovery"
            },
            {
              "description": "Adversaries may attempt to get detailed information about a device\u2019s operating system and hardware, including versions, patches, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not to fully infects the target and/or attempts specific actions. \nOn Android, much of this information is programmatically accessible to applications through the android.os.Build class.  iOS is much more restrictive with what information is visible to applications. Typically, applications will only be able to query the device model and which version of iOS it is running. ",
              "signatures": [
                {
                  "severity": "INFO",
                  "description": "Queries several sensitive phone informations"
                }
              ],
              "link": "https://attack.mitre.org/techniques/T1426/",
              "id": "T1426",
              "name": "System Information Discovery"
            },
            {
              "description": "Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of operating systems they access or through information discovery of remote systems. \nOn Android, details of onboard network interfaces are accessible to apps through the java.net.NetworkInterface class. Previously, the Android TelephonyManager class could be used to gather telephony-related device identifiers, information such as the IMSI, IMEI, and phone number. However, starting with Android 10, only preloaded, carrier, the default SMS, or device and profile owner applications can access the telephony-related device identifiers. \nOn iOS, gathering network configuration information is not possible without root access. \nAdversaries may use the information from System Network Configuration Discovery during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. ",
              "signatures": [
                {
                  "severity": "INFO",
                  "description": "Checks if a SIM card is installed"
                }
              ],
              "link": "https://attack.mitre.org/techniques/T1422/",
              "id": "T1422",
              "name": "System Network Configuration Discovery"
            }
          ],
          "link": "https://attack.mitre.org/tactics/TA0032/",
          "id": "TA0032",
          "name": "Discovery"
        },
        {
          "description": " The adversary is trying to avoid being detected.\n\nDefense evasion consists of techniques an adversary may use to evade detection or avoid other defenses. Sometimes these actions are the same as or variations of techniques in other categories that have the added benefit of subverting a particular defense or mitigation. Defense evasion may be considered a set of attributes the adversary applies to all other phases of the operation.",
          "techniques": [
            {
              "description": "Adversaries may attempt to make a payload or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the device or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Portions of files can also be encoded to hide the plaintext strings that would otherwise help defenders with discovery. Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. ",
              "signatures": [
                {
                  "severity": "INFO",
                  "description": "Obfuscates method names"
                }
              ],
              "link": "https://attack.mitre.org/techniques/T1406/",
              "id": "T1406",
              "name": "Obfuscated Files or Information"
            },
            {
              "description": "Adversaries may wipe a device or delete individual files in order to manipulate external outcomes or hide activity. An application must have administrator access to fully wipe the device, while individual files may not require special permissions to delete depending on their storage location. \nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The impact file deletion will have depends on the type of data as well as the goals and objectives of the adversary, but can include deleting update files to evade detection or deleting attacker-specified files for impact.",
              "signatures": [
                {
                  "severity": "INFO",
                  "description": "Lists and deletes files in the same context"
                }
              ],
              "link": "https://attack.mitre.org/techniques/T1447/",
              "id": "T1447",
              "name": "Delete Device Data"
            }
          ],
          "link": "https://attack.mitre.org/tactics/TA0030/",
          "id": "TA0030",
          "name": "Defense Evasion"
        },
        {
          "description": "The adversary is trying to manipulate, interrupt, or destroy your devices and data.\n\nThe impact tactic consists of techniques used by the adversary to execute his or her mission objectives but that do not cleanly fit into another category such as Collection. Mission objectives vary based on each adversary's goals, but examples include toll fraud, destruction of device data, or locking the user out of his or her device until a ransom is paid.",
          "techniques": [
            {
              "description": "Adversaries may wipe a device or delete individual files in order to manipulate external outcomes or hide activity. An application must have administrator access to fully wipe the device, while individual files may not require special permissions to delete depending on their storage location. \nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The impact file deletion will have depends on the type of data as well as the goals and objectives of the adversary, but can include deleting update files to evade detection or deleting attacker-specified files for impact.",
              "signatures": [
                {
                  "severity": "INFO",
                  "description": "Lists and deletes files in the same context"
                }
              ],
              "link": "https://attack.mitre.org/techniques/T1447/",
              "id": "T1447",
              "name": "Delete Device Data"
            }
          ],
          "link": "https://attack.mitre.org/tactics/TA0034/",
          "id": "TA0034",
          "name": "Impact"
        },
        {
          "description": "The adversary is trying to gather data of interest to their goal.\n\nCollection consists of techniques used to identify and gather information, such as sensitive files, from a target network prior to exfiltration. This category also covers locations on a system or network where the adversary may look for information to exfiltrate.",
          "techniques": [
            {
              "description": "Adversaries may use device sensors to collect information about nearby networks, such as Wi-Fi and Bluetooth.",
              "signatures": [
                {
                  "severity": "INFO",
                  "description": "Checks an internet connection is available"
                }
              ],
              "link": "https://attack.mitre.org/techniques/T1507/",
              "id": "T1507",
              "name": "Network Information Discovery"
            },
            {
              "description": "Adversaries may use screen capture to collect additional information about a target device, such as applications running in the foreground, user data, credentials, or other sensitive information. Applications running in the background can capture screenshots or videos of another application running in the foreground by using the Android MediaProjectionManager (generally requires the device user to grant consent). Background applications can also use Android accessibility services to capture screen contents being displayed by a foreground application. An adversary with root access or Android Debug Bridge (adb) access could call the Android screencap or screenrecord commands. ",
              "signatures": [
                {
                  "severity": "LOW",
                  "description": "Contains a screen recorder (to take screenshot)"
                }
              ],
              "link": "https://attack.mitre.org/techniques/T1513/",
              "id": "T1513",
              "name": "Screen Capture"
            }
          ],
          "link": "https://attack.mitre.org/tactics/TA0035/",
          "id": "TA0035",
          "name": "Collection"
        },
        {
          "description": "The adversary is trying to intercept or manipulate network traffic to or from a device.\n\nThis category refers to network-based techniques that an adversary may be able to use to fulfill his or her objectives without access to the mobile device itself. These include techniques to intercept or manipulate network traffic to and from the mobile device.",
          "techniques": [
            {
              "description": "If network traffic between the mobile device and remote servers is unencrypted or is encrypted in an insecure manner, then an adversary positioned on the network can eavesdrop on communication.",
              "signatures": [
                {
                  "severity": "INFO",
                  "description": "Monitors network connection state"
                }
              ],
              "link": "https://attack.mitre.org/techniques/T1439/",
              "id": "T1439",
              "name": "Eavesdrop on Insecure Network Communication"
            }
          ],
          "link": "https://attack.mitre.org/tactics/TA0038/",
          "id": "TA0038",
          "name": "Network Effects"
        },
        {
          "description": "The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim\u2019s network structure and defenses.",
          "techniques": [
            {
              "description": "Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ",
              "signatures": [
                {
                  "severity": "INFO",
                  "description": "Uses HTTPS"
                }
              ],
              "link": "https://attack.mitre.org/techniques/T1071/",
              "id": "T1071",
              "name": "Application Layer Protocol"
            },
            {
              "description": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.",
              "signatures": [
                {
                  "severity": "INFO",
                  "description": "Uses HTTPS"
                }
              ],
              "link": "https://attack.mitre.org/techniques/T1573/",
              "id": "T1573",
              "name": "Encrypted Channel"
            }
          ],
          "link": "https://attack.mitre.org/tactics/TA0011/",
          "id": "TA0011",
          "name": "Command and Control"
        }
      ]
    }
  },
  "links": {
    "self": "https://www.virustotal.com/api/v3/files/e10360e06906248e11b308de3169d3b5/behaviour_mitre_trees"
  },
  "md5": "e10360e06906248e11b308de3169d3b5"
}