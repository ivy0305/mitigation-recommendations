{
    "data": {
        "Zenbox android": {
            "tactics": [
                {
                    "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques that allow the adversary to gain knowledge about the characteristics of the mobile device and potentially other networked systems. When adversaries gain access to a new system, they must orient themselves to what they now have control of and what benefits operating from that system give to their current objective or overall goals during the intrusion. The operating system may provide capabilities that aid in this post-compromise information-gathering phase.",
                    "techniques": [
                        {
                            "description": "Adversaries may track a device\u2019s physical location through use of standard operating system APIs via malicious or exploited applications on the compromised device. \nOn Android, applications holding the ACCESS_COAURSE_LOCATION or ACCESS_FINE_LOCATION permissions provide access to the device\u2019s physical location. On Android 10 and up, declaration of the ACCESS_BACKGROUND_LOCATION permission in an application\u2019s manifest will allow applications to request location access even when the application is running in the background. Some adversaries have utilized integration of Baidu map services to retrieve geographical location once the location access permissions had been obtained. \nOn iOS, applications must include the NSLocationWhenInUseUsageDescription, NSLocationAlwaysAndWhenInUseUsageDescription, and/or NSLocationAlwaysUsageDescription keys in their Info.plist file depending on the extent of requested access to location information. On iOS 8.0 and up, applications call requestWhenInUseAuthorization() to request access to location information when the application is in use or requestAlwaysAuthorization() to request access to location information regardless of whether the application is in use. With elevated privileges, an adversary may be able to access location data without explicit user consent with the com.apple.locationd.preauthorized entitlement key.",
                            "signatures": [
                                {
                                    "severity": "INFO",
                                    "description": "Has permission to query the current location"
                                },
                                {
                                    "severity": "INFO",
                                    "description": "Queries the phones location (GPS)"
                                }
                            ],
                            "link": "https://attack.mitre.org/techniques/T1430/",
                            "id": "T1430",
                            "name": "Location Tracking"
                        },
                        {
                            "description": "Adversaries may attempt to get detailed information about a device\u2019s operating system and hardware, including versions, patches, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not to fully infects the target and/or attempts specific actions. \nOn Android, much of this information is programmatically accessible to applications through the android.os.Build class.  iOS is much more restrictive with what information is visible to applications. Typically, applications will only be able to query the device model and which version of iOS it is running. ",
                            "signatures": [
                                {
                                    "severity": "INFO",
                                    "description": "Queries several sensitive phone informations"
                                }
                            ],
                            "link": "https://attack.mitre.org/techniques/T1426/",
                            "id": "T1426",
                            "name": "System Information Discovery"
                        }
                    ],
                    "link": "https://attack.mitre.org/tactics/TA0032/",
                    "id": "TA0032",
                    "name": "Discovery"
                },
                {
                    "description": "The adversary is trying to intercept or manipulate network traffic to or from a device.\n\nThis category refers to network-based techniques that an adversary may be able to use to fulfill his or her objectives without access to the mobile device itself. These include techniques to intercept or manipulate network traffic to and from the mobile device.",
                    "techniques": [
                        {
                            "description": "An adversary could exploit signaling system vulnerabilities to redirect calls or text messages (SMS) to a phone number under the attacker's control. The adversary could then act as an adversary-in-the-middle to intercept or manipulate the communication.      Interception of SMS messages could enable adversaries to obtain authentication codes used for multi-factor authentication.",
                            "signatures": [
                                {
                                    "severity": "INFO",
                                    "description": "Has permission to perform phone calls in the background"
                                }
                            ],
                            "link": "https://attack.mitre.org/techniques/T1449/",
                            "id": "T1449",
                            "name": "Exploit SS7 to Redirect Phone Calls/SMS"
                        }
                    ],
                    "link": "https://attack.mitre.org/tactics/TA0038/",
                    "id": "TA0038",
                    "name": "Network Effects"
                },
                {
                    "description": " The adversary is trying to avoid being detected.\n\nDefense evasion consists of techniques an adversary may use to evade detection or avoid other defenses. Sometimes these actions are the same as or variations of techniques in other categories that have the added benefit of subverting a particular defense or mitigation. Defense evasion may be considered a set of attributes the adversary applies to all other phases of the operation.",
                    "techniques": [
                        {
                            "description": "Adversaries may attempt to make a payload or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the device or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Portions of files can also be encoded to hide the plaintext strings that would otherwise help defenders with discovery. Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. ",
                            "signatures": [
                                {
                                    "severity": "INFO",
                                    "description": "Obfuscates method names"
                                }
                            ],
                            "link": "https://attack.mitre.org/techniques/T1406/",
                            "id": "T1406",
                            "name": "Obfuscated Files or Information"
                        }
                    ],
                    "link": "https://attack.mitre.org/tactics/TA0030/",
                    "id": "TA0030",
                    "name": "Defense Evasion"
                },
                {
                    "description": "The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim\u2019s network structure and defenses.",
                    "techniques": [
                        {
                            "description": "Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ",
                            "signatures": [
                                {
                                    "severity": "INFO",
                                    "description": "Performs DNS lookups"
                                },
                                {
                                    "severity": "INFO",
                                    "description": "Uses HTTPS"
                                }
                            ],
                            "link": "https://attack.mitre.org/techniques/T1071/",
                            "id": "T1071",
                            "name": "Application Layer Protocol"
                        },
                        {
                            "description": "Adversaries may use an OSI non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive. Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).\nICMP communication between hosts is one example. Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts. However, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.",
                            "signatures": [
                                {
                                    "severity": "INFO",
                                    "description": "Performs DNS lookups"
                                }
                            ],
                            "link": "https://attack.mitre.org/techniques/T1095/",
                            "id": "T1095",
                            "name": "Non-Application Layer Protocol"
                        },
                        {
                            "description": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.",
                            "signatures": [
                                {
                                    "severity": "INFO",
                                    "description": "Uses HTTPS"
                                }
                            ],
                            "link": "https://attack.mitre.org/techniques/T1573/",
                            "id": "T1573",
                            "name": "Encrypted Channel"
                        }
                    ],
                    "link": "https://attack.mitre.org/tactics/TA0011/",
                    "id": "TA0011",
                    "name": "Command and Control"
                },
                {
                    "description": "The adversary is trying to gather data of interest to their goal.\n\nCollection consists of techniques used to identify and gather information, such as sensitive files, from a target network prior to exfiltration. This category also covers locations on a system or network where the adversary may look for information to exfiltrate.",
                    "techniques": [
                        {
                            "description": "An adversary could call standard operating system APIs from a malicious application to gather contact list (i.e., address book) data, or with escalated privileges could directly access files containing contact list data.",
                            "signatures": [
                                {
                                    "severity": "INFO",
                                    "description": "Queries phone contact information"
                                }
                            ],
                            "link": "https://attack.mitre.org/techniques/T1432/",
                            "id": "T1432",
                            "name": "Access Contact List"
                        },
                        {
                            "description": "Adversaries may track a device\u2019s physical location through use of standard operating system APIs via malicious or exploited applications on the compromised device. \nOn Android, applications holding the ACCESS_COAURSE_LOCATION or ACCESS_FINE_LOCATION permissions provide access to the device\u2019s physical location. On Android 10 and up, declaration of the ACCESS_BACKGROUND_LOCATION permission in an application\u2019s manifest will allow applications to request location access even when the application is running in the background. Some adversaries have utilized integration of Baidu map services to retrieve geographical location once the location access permissions had been obtained. \nOn iOS, applications must include the NSLocationWhenInUseUsageDescription, NSLocationAlwaysAndWhenInUseUsageDescription, and/or NSLocationAlwaysUsageDescription keys in their Info.plist file depending on the extent of requested access to location information. On iOS 8.0 and up, applications call requestWhenInUseAuthorization() to request access to location information when the application is in use or requestAlwaysAuthorization() to request access to location information regardless of whether the application is in use. With elevated privileges, an adversary may be able to access location data without explicit user consent with the com.apple.locationd.preauthorized entitlement key.",
                            "signatures": [
                                {
                                    "severity": "INFO",
                                    "description": "Has permission to query the current location"
                                },
                                {
                                    "severity": "INFO",
                                    "description": "Queries the phones location (GPS)"
                                }
                            ],
                            "link": "https://attack.mitre.org/techniques/T1430/",
                            "id": "T1430",
                            "name": "Location Tracking"
                        }
                    ],
                    "link": "https://attack.mitre.org/tactics/TA0035/",
                    "id": "TA0035",
                    "name": "Collection"
                }
            ]
        }
    },
    "links": {
        "self": "https://www.virustotal.com/api/v3/files/f783fafbcf20ed83b0a1054971aa8914c79bc4341c4a533ad19f4dbcd21d7c78/behaviour_mitre_trees"
    }
}