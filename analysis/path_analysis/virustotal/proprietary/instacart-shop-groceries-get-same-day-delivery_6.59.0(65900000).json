{
    "data": {
        "Zenbox android": {
            "tactics": [
                {
                    "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques that allow the adversary to gain knowledge about the characteristics of the mobile device and potentially other networked systems. When adversaries gain access to a new system, they must orient themselves to what they now have control of and what benefits operating from that system give to their current objective or overall goals during the intrusion. The operating system may provide capabilities that aid in this post-compromise information-gathering phase.",
                    "techniques": [
                        {
                            "description": "Adversaries may attempt to get a listing of applications that are installed on a device. Adversaries may use the information from Software Discovery during automated discovery to shape follow-on behaviors, including whether or not to fully infect the target and/or attempts specific actions. \nAdversaries may attempt to enumerate applications for a variety of reasons, such as figuring out what security measures are present or to identify the presence of target applications. ",
                            "signatures": [
                                {
                                    "severity": "INFO",
                                    "description": "Has permission to query the list of currently running applications"
                                }
                            ],
                            "link": "https://attack.mitre.org/techniques/T1418/",
                            "id": "T1418",
                            "name": "Software Discovery"
                        },
                        {
                            "description": "Adversaries may track a device\u2019s physical location through use of standard operating system APIs via malicious or exploited applications on the compromised device. \nOn Android, applications holding the ACCESS_COAURSE_LOCATION or ACCESS_FINE_LOCATION permissions provide access to the device\u2019s physical location. On Android 10 and up, declaration of the ACCESS_BACKGROUND_LOCATION permission in an application\u2019s manifest will allow applications to request location access even when the application is running in the background. Some adversaries have utilized integration of Baidu map services to retrieve geographical location once the location access permissions had been obtained. \nOn iOS, applications must include the NSLocationWhenInUseUsageDescription, NSLocationAlwaysAndWhenInUseUsageDescription, and/or NSLocationAlwaysUsageDescription keys in their Info.plist file depending on the extent of requested access to location information. On iOS 8.0 and up, applications call requestWhenInUseAuthorization() to request access to location information when the application is in use or requestAlwaysAuthorization() to request access to location information regardless of whether the application is in use. With elevated privileges, an adversary may be able to access location data without explicit user consent with the com.apple.locationd.preauthorized entitlement key.",
                            "signatures": [
                                {
                                    "severity": "INFO",
                                    "description": "Has permission to query the current location"
                                },
                                {
                                    "severity": "INFO",
                                    "description": "Queries the phones location (GPS)"
                                }
                            ],
                            "link": "https://attack.mitre.org/techniques/T1430/",
                            "id": "T1430",
                            "name": "Location Tracking"
                        },
                        {
                            "description": "Adversaries may attempt to get information about running processes on a device. Information obtained could be used to gain an understanding of common software/applications running on devices within a network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions. \nRecent Android security enhancements have made it more difficult to obtain a list of running processes. On Android 7 and later, there is no way for an application to obtain the process list without abusing elevated privileges. This is due to the Android kernel utilizing the hidepid mount feature. Prior to Android 7, applications could utilize the ps command or examine the /proc directory on the device. \nIn iOS, applications have previously been able to use the sysctl command to obtain a list of running processes. This functionality has been removed in later iOS versions. ",
                            "signatures": [
                                {
                                    "severity": "INFO",
                                    "description": "Queries list of running processes/tasks"
                                }
                            ],
                            "link": "https://attack.mitre.org/techniques/T1424/",
                            "id": "T1424",
                            "name": "Process Discovery"
                        },
                        {
                            "description": "Adversaries may attempt to get detailed information about a device\u2019s operating system and hardware, including versions, patches, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not to fully infects the target and/or attempts specific actions. \nOn Android, much of this information is programmatically accessible to applications through the android.os.Build class.  iOS is much more restrictive with what information is visible to applications. Typically, applications will only be able to query the device model and which version of iOS it is running. ",
                            "signatures": [
                                {
                                    "severity": "INFO",
                                    "description": "Queries several sensitive phone informations"
                                }
                            ],
                            "link": "https://attack.mitre.org/techniques/T1426/",
                            "id": "T1426",
                            "name": "System Information Discovery"
                        }
                    ],
                    "link": "https://attack.mitre.org/tactics/TA0032/",
                    "id": "TA0032",
                    "name": "Discovery"
                },
                {
                    "description": " The adversary is trying to avoid being detected.\n\nDefense evasion consists of techniques an adversary may use to evade detection or avoid other defenses. Sometimes these actions are the same as or variations of techniques in other categories that have the added benefit of subverting a particular defense or mitigation. Defense evasion may be considered a set of attributes the adversary applies to all other phases of the operation.",
                    "techniques": [
                        {
                            "description": "Adversaries may attempt to get a listing of applications that are installed on a device. Adversaries may use the information from Software Discovery during automated discovery to shape follow-on behaviors, including whether or not to fully infect the target and/or attempts specific actions. \nAdversaries may attempt to enumerate applications for a variety of reasons, such as figuring out what security measures are present or to identify the presence of target applications. ",
                            "signatures": [
                                {
                                    "severity": "INFO",
                                    "description": "Has permission to query the list of currently running applications"
                                }
                            ],
                            "link": "https://attack.mitre.org/techniques/T1418/",
                            "id": "T1418",
                            "name": "Software Discovery"
                        },
                        {
                            "description": "Adversaries may attempt to make a payload or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the device or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Portions of files can also be encoded to hide the plaintext strings that would otherwise help defenders with discovery. Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. ",
                            "signatures": [
                                {
                                    "severity": "INFO",
                                    "description": "Obfuscates method names"
                                }
                            ],
                            "link": "https://attack.mitre.org/techniques/T1406/",
                            "id": "T1406",
                            "name": "Obfuscated Files or Information"
                        }
                    ],
                    "link": "https://attack.mitre.org/tactics/TA0030/",
                    "id": "TA0030",
                    "name": "Defense Evasion"
                },
                {
                    "description": "The adversary is trying to gather data of interest to their goal.\n\nCollection consists of techniques used to identify and gather information, such as sensitive files, from a target network prior to exfiltration. This category also covers locations on a system or network where the adversary may look for information to exfiltrate.",
                    "techniques": [
                        {
                            "description": "Adversaries may track a device\u2019s physical location through use of standard operating system APIs via malicious or exploited applications on the compromised device. \nOn Android, applications holding the ACCESS_COAURSE_LOCATION or ACCESS_FINE_LOCATION permissions provide access to the device\u2019s physical location. On Android 10 and up, declaration of the ACCESS_BACKGROUND_LOCATION permission in an application\u2019s manifest will allow applications to request location access even when the application is running in the background. Some adversaries have utilized integration of Baidu map services to retrieve geographical location once the location access permissions had been obtained. \nOn iOS, applications must include the NSLocationWhenInUseUsageDescription, NSLocationAlwaysAndWhenInUseUsageDescription, and/or NSLocationAlwaysUsageDescription keys in their Info.plist file depending on the extent of requested access to location information. On iOS 8.0 and up, applications call requestWhenInUseAuthorization() to request access to location information when the application is in use or requestAlwaysAuthorization() to request access to location information regardless of whether the application is in use. With elevated privileges, an adversary may be able to access location data without explicit user consent with the com.apple.locationd.preauthorized entitlement key.",
                            "signatures": [
                                {
                                    "severity": "INFO",
                                    "description": "Has permission to query the current location"
                                },
                                {
                                    "severity": "INFO",
                                    "description": "Queries the phones location (GPS)"
                                }
                            ],
                            "link": "https://attack.mitre.org/techniques/T1430/",
                            "id": "T1430",
                            "name": "Location Tracking"
                        },
                        {
                            "description": "Adversaries may capture audio to collect information by leveraging standard operating system APIs of a mobile device. Examples of audio information adversaries may target include user conversations, surroundings, phone calls, or other sensitive information. \nAndroid and iOS, by default, require that applications request device microphone access from the user.  \nOn Android devices, applications must hold the RECORD_AUDIO permission to access the microphone or the CAPTURE_AUDIO_OUTPUT permission to access audio output. Because Android does not allow third-party applications to hold the CAPTURE_AUDIO_OUTPUT permission by default, only privileged applications, such as those distributed by Google or the device vendor, can access audio output. However, adversaries may be able to gain this access after successfully elevating their privileges. With the CAPTURE_AUDIO_OUTPUT permission, adversaries may pass the MediaRecorder.AudioSource.VOICE_CALL constant to MediaRecorder.setAudioOutput, allowing capture of both voice call uplink and downlink. \nOn iOS devices, applications must include the NSMicrophoneUsageDescription key in their Info.plist file to access the microphone.",
                            "signatures": [
                                {
                                    "severity": "INFO",
                                    "description": "Has permission to record audio in the background"
                                }
                            ],
                            "link": "https://attack.mitre.org/techniques/T1429/",
                            "id": "T1429",
                            "name": "Audio Capture"
                        }
                    ],
                    "link": "https://attack.mitre.org/tactics/TA0035/",
                    "id": "TA0035",
                    "name": "Collection"
                }
            ]
        }
    },
    "links": {
        "self": "https://www.virustotal.com/api/v3/files/8b90b1c3666b9fd16f4bea5db34a529fe640ebfae449f21f01a45873cafe0b97/behaviour_mitre_trees"
    }
}